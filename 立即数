作者：木法沙
链接：https://www.zhihu.com/question/23349404/answer/2227500247
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

int a = 3; a是左值，3是右值，但是a也可以是右值，比方说int b = a; 3则绝对不能是左值，不可能有int 3 = a;这件事，编译会报错，编译这样规定的原因是mov #3，a会报错。原因和你说的立即数存储在哪里相关。立即数这个词在汇编上出现更多，学过接口原理,计算机组成，汇编单片机以后对这个语句一定很熟悉：ADD r2, r3, #1     (汇编) r2 = r3 + 1 ;     （通用语言）  其中r2 和r3都代表了一个寄存器（r = register），如果你有调试汇编语言的经验，debug的时候可以看到r2 和r3其实代表了一个地址，格式类似0x000012345。这意味着这个r2，r3是被“装在”这个地址里面的。在汇编语言里：有地址 = 有被寄存器装着  但是#1表示立即数，它没有被装在地址里面，它也没有被装在寄存器里面。cpu的架构有很多，但是我只是个垃圾本科生，所以我只能用我学过的mips结构图来跟你解释在mips的简化结构图里，#1作为一个用高低频表示的电信号，它只存在于电线里面所以立即数它只能读，不能写，不能被赋值，因为它只存在了一瞬。就像初中的电势图一样，是立即产生,立即读取的。
